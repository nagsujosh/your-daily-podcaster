name: Daily Podcast Generation

on:
  schedule:
    # Run daily at 8:00 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  SEARCH_DB_PATH: data/db/search_index.db
  ARTICLE_DB_PATH: data/db/article_data.db
  AUDIO_OUTPUT_DIR: data/audio
  TEMP_AUDIO_DIR: data/audio/temp

jobs:
  generate-podcast:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip

    - name: Install Python dependencies
      run: |
        source venv/bin/activate
        pip install -e .

    - name: Create necessary directories
      run: |
        mkdir -p data/db data/audio/temp logs

    - name: Setup environment variables
      run: |
        echo "GEMINI_KEY=${{ secrets.GEMINI_KEY }}" >> .env
        echo "GCLOUD_TTS_CREDS=${{ secrets.GCLOUD_TTS_CREDS }}" >> .env
        echo "GNEWS_API_KEY=${{ secrets.GNEWS_API_KEY }}" >> .env
        echo "SEARCH_DB_PATH=${{ env.SEARCH_DB_PATH }}" >> .env
        echo "ARTICLE_DB_PATH=${{ env.ARTICLE_DB_PATH }}" >> .env
        echo "AUDIO_OUTPUT_DIR=${{ env.AUDIO_OUTPUT_DIR }}" >> .env
        echo "TEMP_AUDIO_DIR=${{ env.TEMP_AUDIO_DIR }}" >> .env
        echo "LOG_LEVEL=INFO" >> .env
        echo "LOG_FILE=logs/podcaster.log" >> .env

    - name: Setup Google Cloud credentials
      run: |
        echo '${{ secrets.GCLOUD_TTS_CREDS }}' > gcloud_creds.json
        echo "GCLOUD_TTS_CREDS=gcloud_creds.json" >> .env

    - name: Run complete pipeline
      run: |
        source venv/bin/activate
        daily-podcaster
      env:
        GEMINI_KEY: ${{ secrets.GEMINI_KEY }}
        GNEWS_API_KEY: ${{ secrets.GNEWS_API_KEY }}
        GOOGLE_APPLICATION_CREDENTIALS: gcloud_creds.json

    - name: Upload generated files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: daily-podcast-${{ github.run_number }}
        path: |
          data/audio/daily_digest_*.mp3
          data/audio/podcast.xml
          data/audio/metadata_*.json
          logs/
        retention-days: 7

    - name: Create GitHub Release
      if: success()
      uses: softprops/action-gh-release@v1
      with:
        files: data/audio/daily_digest_*.mp3
        tag_name: v${{ github.run_number }}
        name: Daily News Digest - ${{ github.run_number }}
        body: |
          ## Daily News Digest - Automated Generation

          This release contains the latest daily news digest generated by Your Daily Podcaster.

          ### Files Included:
          - `daily_digest_*.mp3` - The complete podcast episode

          ### How to Listen:
          1. Download the MP3 file
          2. Add to your podcast player
          3. Or use the RSS feed: `https://yourdomain.com/podcast.xml`

          ---
          *Generated automatically by GitHub Actions*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to GitHub Pages (if configured)
      if: success()
      run: |
        # This step would upload the RSS feed and audio files to GitHub Pages
        # for public access. You would need to configure GitHub Pages in your repo.
        echo "GitHub Pages upload would happen here if configured"

    - name: Notify on success
      if: success()
      run: |
        echo "Daily podcast generation completed successfully!"
        echo "Check the artifacts for the generated files."

    - name: Notify on failure
      if: failure()
      run: |
        echo "Daily podcast generation failed!"
        echo "Check the logs for more details."

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: failure-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30
